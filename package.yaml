name:                clash-spaceinvaders
version:             0.1.0
synopsis:            "Space Invaders arcade machine"
homepage:            https://github.com/gergoerdi/clash-spaceinvaders
license:             MIT
author:              Gergő Érdi
maintainer:          gergo@erdi.hu
copyright:           2020 Gergő Érdi
category:            Hardware, Games

extra-source-files:
  - LICENSE
  - README.md

data-files:
  - image/*

custom-setup:
  dependencies:
    - base
    - Cabal
    - clashilator

dependencies:
  - base >= 4.7 && < 5
  - clash-prelude
  - ghc-typelits-natnormalise
  - ghc-typelits-extra
  - ghc-typelits-knownnat

  - retroclash-lib
  - clash-shake
  - intel8080

  - mtl
  - transformers
  - lens
  - barbies
  - barbies-th
  - tuple

# Anything that Clash uses by default should go here
default-extensions:
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DeriveAnyClass
  - DeriveGeneric
  - DeriveLift
  - DerivingStrategies
  - ExplicitForAll
  - ExplicitNamespaces
  - FlexibleContexts
  - FlexibleInstances
  - KindSignatures
  - MagicHash
  - MonoLocalBinds
  - NoImplicitPrelude
  - NoStarIsType
  - NoStrictData
  - NoStrict
  - QuasiQuotes
  - ScopedTypeVariables
  - TemplateHaskellQuotes
  - TemplateHaskell
  - TypeApplications
  - TypeFamilies
  - TypeOperators

ghc-options:
  -fexpose-all-unfoldings -fno-worker-wrapper
  -fplugin GHC.TypeLits.KnownNat.Solver
  -fplugin GHC.TypeLits.Normalise
  -fplugin GHC.TypeLits.Extra.Solver

source-dirs:
  - src

flags:
  sim:
    manual: True
    default: True
  verilator:
    manual: True
    default: False

executables:
  spaceinvaders-sim:
    main: sim.hs
    dependencies:
      - retroclash-sim
      - bytestring
      - array
    when:
    - condition: "!flag(sim)"
      buildable: false

  spaceinvaders-verilator:
    main: sim-verilator.hs
    other-modules: []
    dependencies:
      - retroclash-sim
      - extra
    verbatim:
      x-clashilator-top-is: Hardware.SpaceInvaders
      x-clashilator-clock: CLK_25MHZ
    when:
    - condition: "!(flag(sim) && flag(verilator))"
      buildable: false
